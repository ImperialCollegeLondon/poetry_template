name: Python package

on:
  push:

  pull_request:

jobs:
  testing:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry Linux
      if: matrix.os == 'ubuntu-latest'
      run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
    
    - name: Install SPARTA Control Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        export PATH=$HOME/.poetry/bin:$PATH
        poetry install
      
    - name: Test with pytest Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        export PATH=$HOME/.poetry/bin:$PATH
        poetry run pytest
    
    - name: Install Poetry Windows
      if: matrix.os == 'windows-latest'
      run: (Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py -UseBasicParsing).Content | python
      shell: powershell
      
    - name: Install SPARTA Control Windows
      if: matrix.os == 'windows-latest'
      run: |
        $HOME\.poetry\bin\poetry install
      
    - name: Test with pytest Windows
      if: matrix.os == 'windows-latest'
      run: |
        $HOME\.poetry\bin\poetry run pytest
